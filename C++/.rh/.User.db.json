{"Path::C++.rhpj::project":{"title":"C++","parentid":"","id":"23d874e1-b7a4-489d-a1b9-f0058e85ce5a","cloudId":"","version":"2020.7.0","language":"ru_RU","noInlineStyle":false,"advancedHtmlHelpOptions":false,"defaultCss":"contents/assets/css/default.css","defaultWsf":"settings/import/word/default.wsf","defaultFsf":"settings/import/fm/default.fsf","colors":[{"name":"Black","value":"#000000"},{"name":"Red","value":"#FF0000"},{"name":"Lime","value":"#00FF00"},{"name":"Blue","value":"#0000FF"},{"name":"Maroon","value":"#800000"},{"name":"Green","value":"#008000"},{"name":"Navy","value":"#000080"},{"name":"Gray","value":"#808080"},{"name":"White","value":"#FFFFFF"},{"name":"Fuchsia","value":"#FF00FF"},{"name":"Aqua","value":"#00FFFF"},{"name":"Yellow","value":"#FFFF00"},{"name":"Purple","value":"#800080"},{"name":"Olive","value":"#808000"},{"name":"Teal","value":"#008080"},{"name":"Silver","value":"#C0C0C0"}],"content":{"root":{"path":"contents/","type":"folder","scope":"internal"},"items":[]},"conditional":{"root":{"path":"condition","type":"folder","scope":"internal"},"items":[]},"variable":{"root":{"path":"variable","type":"folder","scope":"internal"},"items":[]},"tocs":{"root":{"path":"toc","type":"folder","scope":"internal"},"items":[]},"glossary":{"root":{"path":"glossary","type":"folder","scope":"internal"},"items":[]},"index":{"root":{"path":"index","type":"folder","scope":"internal"},"items":[]},"seealso":{"root":{"path":"seealso","type":"folder","scope":"internal"},"items":[]},"folders":{"root":"","items":[]},"snippets":{"root":{"path":"contents/assets/snippets","type":"folder","scope":"internal"},"items":[]},"microcontent":{"root":{"path":"contents/microcontent","type":"folder","scope":"internal"},"items":[]},"versionControl":false,"map":{"toc":{"root":{"path":"toc","type":"folder","scope":"internal"},"items":[]},"glossary":{"root":{"path":"glossary","type":"folder","scope":"internal"},"items":[]},"index":{"root":{"path":"index","type":"folder","scope":"internal"},"items":[]},"seealso":{"root":{"path":"seealso","type":"folder","scope":"internal"},"items":[]},"folders":{"root":"","items":[]},"snippet":{"root":{"path":"contents/assets/snippets","type":"folder","scope":"internal"},"items":[]},"microcontent":{"root":{"path":"contents/microcontent","type":"folder","scope":"internal"},"items":[]},"condition":{"root":{"path":"condition","type":"folder","scope":"internal"},"items":[]},"variable":{"root":{"path":"variable","type":"folder","scope":"internal"},"items":[]},"topic":{"root":{"path":"contents/","type":"folder","scope":"internal"},"items":[]}},"_topicStatuses":["Draft","In Progress","Ready for Review","Sent for Review","Reviewed","Complete"],"_conditionTagCategories":["Audience","Platform","Product","Properties","Others"],"links":[],"scripts":{},"panelShowHide":{"authorTabs":[],"outputTabs":[]}},"Path::contents/Arrays.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Arrays.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"Data_type.htm","attr":"href","topic":"contents/Arrays.htm","nodeName":"a","external":false,"relPath":"contents/Data_type.htm"}],"Path::contents/Arrays.htm::Variables":["name_of_book","Copyright"],"Path::contents/Arrays.htm::Conditions":[],"Path::contents/Arrays.htm::TopicConditions":[],"Path::contents/Arrays.htm::IndexKeywords":[],"Path::contents/Arrays.htm::Glossary":[],"Path::contents/Arrays.htm::Bookmarks":[],"Path::contents/Arrays.htm::MicrocontentResponse":[],"Path::contents/Arrays.htm::Title":"Массивы","Path::contents/Arrays.htm::Status":"Draft","Path::contents/Arrays.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Массивы\n        \n      \n    \n  \n  \n       Массив почти как переменная, но только он может хранить не одно, а несколько значений. Как и любой объект в С++, массив нужно объявить назначив ему тип и имя, а так же нужно указать размер массива.\n       int array[10];     // Объявлен массив целого типа (int), с именем \"array\" и числом ячеек хранения 10.\n  Массив так же можно проинициализировать при объявлении:\n       int array[10]={0,1,2,3,4,5,6,7,8,9};  // Объявлен массив целого типа (int), с именем \"array\" и числом ячеек хранения 10. И все его ячейки заполнены числами с 0 по 9. \n  Для записи значения в отдельную ячейку нужно назвать имя массива и номер его ячейки в квадратных скобках. Номер ячейки называют ИНДЕКСОМ массива.    \n       array[5]=8;    // В ячейку массива с именем \"array\"с индексом 5 поместили значение 8\n  ВНИМАНИЕ!\n       - тип массива указывается только при объявлении.\n       - Нумерация ячеек массива начинается с нуля.\n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Arrays.htm::size":2983,"Path::contents/Condition.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Condition.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"}],"Path::contents/Condition.htm::Variables":["name_of_book","Copyright"],"Path::contents/Condition.htm::Conditions":[],"Path::contents/Condition.htm::TopicConditions":[],"Path::contents/Condition.htm::IndexKeywords":[],"Path::contents/Condition.htm::Glossary":[],"Path::contents/Condition.htm::Bookmarks":[],"Path::contents/Condition.htm::MicrocontentResponse":[],"Path::contents/Condition.htm::Author":"DAYWER.RU","Path::contents/Condition.htm::Title":"Условие","Path::contents/Condition.htm::Status":"Draft","Path::contents/Condition.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Условный оператор IF/ELSE\n        \n      \n    \n  \n   \n  Если условие указанное в круглых скобках выполняется, то есть результат возвращает ИСТИНУ, тогда выполняется  одна строка программы.\n  Выражение условия может быть усложнено логическими операторами И, ИЛИ, НЕ.\n       \n         if ( n <  100)   // одна cтрока кода ;      // если i меньше 100 выполняем какую-то строку программы\n   Или так:\n         if ( n < 100) \n                            // одна строка кода  ;                    // если i меньше 100 выполняем какую-то строку программы\n                    else\n                            // другая строка кода ;                // иначе выполняем другую строку программы\n  \n  Если нужно выполнить несколько строк программы, то они должны быть окружены фигурными скобками { }.\n   \n        if ( n == 2 )    // если n равно двум\n                     { \n                             // одна или несколько строк кода;\n                     }\n   Или так:\n       if ( n != 2 )  // если n не равно двум\n                     { \n                           // одна или несколько строк кода;\n                     }\n             esle\n                     { \n                           // одна или несколько строк кода;\n                     }\n        \n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Condition.htm::size":3769,"Path::contents/assets/masterpages/book.htt::Links":[{"origLink":"../css/default.css","attr":"href","topic":"contents/assets/masterpages/book.htt","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"../css/book.css","attr":"href","topic":"contents/assets/masterpages/book.htt","nodeName":"link","external":false,"relPath":"contents/assets/css/book.css"}],"Path::contents/assets/masterpages/book.htt::Variables":[],"Path::contents/assets/masterpages/book.htt::Conditions":[],"Path::contents/assets/masterpages/book.htt::TopicConditions":[],"Path::contents/assets/masterpages/book.htt::IndexKeywords":[],"Path::contents/assets/masterpages/book.htt::Glossary":[],"Path::contents/assets/masterpages/book.htt::Bookmarks":[],"Path::contents/assets/masterpages/book.htt::MicrocontentResponse":[],"Path::contents/assets/masterpages/book.htt::Title":"book","Path::contents/assets/masterpages/book.htt::InnerText":"\n  \n    \n      \n        \n        \n      \n      \n        \n          \n            Project\n          \n          \n             \n          \n        \n      \n    \n  \n  \n    This is Body Placeholder text for your Master Page. Topics created using this Master Page will get this text by default. Replace text of this Body Placeholder with your default content for topics.\n    Area outside this Body Placeholder represents the layout of the Master Page which will not be shown in the associated topics but will be present in the output. The Body Placeholder content will be replaced by actual topic content in the output.\n    Use Master Page to define the layout of your topic in the output.\n  \n  \n    \n      \n        \n        \n      \n      \n        \n          \n            Project\n          \n          \n            Page 1 of 1\n          \n        \n      \n    \n  \n\n","Path::contents/assets/masterpages/book.htt::size":2163,"Path::contents/Cycles.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Cycles.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"assets/masterpages/book.htt","attr":"content","topic":"contents/Cycles.htm","nodeName":"meta","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::contents/Cycles.htm::Variables":["name_of_book","Copyright"],"Path::contents/Cycles.htm::Conditions":[],"Path::contents/Cycles.htm::TopicConditions":[],"Path::contents/Cycles.htm::IndexKeywords":[],"Path::contents/Cycles.htm::Glossary":[],"Path::contents/Cycles.htm::Bookmarks":[],"Path::contents/Cycles.htm::MicrocontentResponse":[],"Path::contents/Cycles.htm::Author":"DAYWER.RU","Path::contents/Cycles.htm::Title":"Циклы","Path::contents/Cycles.htm::Status":"Draft","Path::contents/Cycles.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Циклы\n        \n      \n    \n  \n  \n  Циклы служат для повторения участка кода.\n  Цикл FOR продолжает выполняться пока условие выполнения цикла возвращает ИСТИНУ.\n  for ( выражение инициализации; выражение условия выполнения цикла;  выражение выполняющееся в конце каждого цикла) \n  {\n      // Между фигурными скобками находится тело цикла.\n     //  То есть сюда помещают программный код\n     //  Если строка кода всего одна, то фигурные скобки не нужны.\n  }\n   \n  Ниже показаны примеры использования циклов.\n  Запись  for (int i=1; i<100; i++) следует понимать так:\n  int i=0 - перед началом выполнения объявить переменную типа \"int\" с именем \"i\" и присвоить ей значение ноль.\n  i<100 - продолжать цикл пока значение переменной \"i\" меньше ста.\n  i++ - в конце каждого цикла выполнять инкремент переменной \"i\", то есть увеличивать значение на единицу.\n  Переменную \"i\" в данном случае принято называть счетчиком цикла или итератором.\n   \n  Цикл FOR \n        for (int i=1; i<100; i++)\n              // одна строка кода;\n   Или так:    \n        for (int i=1; i<100; i++)\n              {\n                  // одна или несколько строк кода;\n              }\n  ВНИМАНИЕ!\n  1. Инициализировать можно сразу несколько переменных, НО ТОЛЬКО ОДНОГО ТИПА ДАННЫХ.\n  2. Условие выполнения может быть усложнено логическими операторами И, ИЛИ, НЕ.\n  3. Выражений выполняющихся в конце цикла может быть несколько.\n   \n  Пример:\n   for (int i=1, a=2 ; i<10 && a>10 ; i++, a--)\n              {\n                  // одна или несколько строк кода;\n              }\n   \n   \n  \n  Цикл WHILE выполняется до тех пор пока выражение в скобках возвращает ИСТИНУ. В скобках может быть указано любое выражение сравнения, либо true или false.\n  Условие выполнения может быть усложнено логическими операторами И, ИЛИ, НЕ.\n  Цикл WHILE\n         while (true)\n                  // одна строка кода;\n   Или так:    \n         while (true)\n            {\n                  // одна или несколько строк кода;\n            }\n  \n  \n  Цикл DO/WHILE\n  В цикле DO/WHILE условие ставится в конце, поэтому не смотря на условие цикл гарантированно будет выполнен хотя бы один раз. В скобках может быть указано любое выражение сравнения, либо true или false. Условие выполнения может быть усложнено логическими операторами И, ИЛИ, НЕ.\n         do \n                  // одна строка кода;             \n         while ( true ) ;\n   \n   Или так:  \n       do {\n                   // одна или несколько строк кода;           \n               }  while ( true ) ;\n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Cycles.htm::size":7207,"Path::contents/Variables.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Variables.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"Data_type.htm","attr":"href","topic":"contents/Variables.htm","nodeName":"a","external":false,"relPath":"contents/Data_type.htm"}],"Path::contents/Variables.htm::Variables":["name_of_book","Copyright"],"Path::contents/Variables.htm::Conditions":[],"Path::contents/Variables.htm::TopicConditions":[],"Path::contents/Variables.htm::IndexKeywords":[],"Path::contents/Variables.htm::Glossary":[],"Path::contents/Variables.htm::Bookmarks":[],"Path::contents/Variables.htm::MicrocontentResponse":[],"Path::contents/Variables.htm::Title":"Переменные","Path::contents/Variables.htm::Status":"Draft","Path::contents/Variables.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Переменные\n        \n      \n    \n  \n  \n  Переменная - это «ячейка» оперативной памяти компьютера, в которой может храниться какая-либо информация.\n  До начала использования, переменную нужно объявить. Делается это таким образом. Сначала указываем тип, затем имя переменной.\n  Например: \n      int x;        // создает переменную целого типа с именем \"x\" \n      int x{5};   // создает переменную целого типа с именем \"x\" и присваивает ей значение 5\n      int x=5;    //  тоже самое что и выше, другая форма записи.\n  ВНИМАНИЕ!\n      - Тип у переменной указывается только один раз, в момент объявления.\n      - Внутри программы значение переменной можно перезаписывать таким образом\n           x=22;    // так можно\n           x{22};   // так нельзя. такая форма записи допускается только при объявлении переменной.\n   \n  Примеры объявлений переменных разного типа:\n  bool x=true;                // объявлена переменная логического типа с именем \"x\" и значением true (ИСТИНА).\n  bool x=0;                     // объявлена переменная логического типа с именем \"x\" и значением 0 (ЛОЖЬ).\n  int a=5;                        // объявлена переменная целого типа с именем \"a\" и значением 55.\n  char symbol=84;        // объявлена переменная символьного типа с именем \"symbol\" и значением 84 ( символ \"T\" из ASCII таблицы).\n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n  \n\n","Path::contents/Variables.htm::size":4046,"Path::contents/assets/css/default.css::Links":[],"Path::contents/assets/css/default.css::Variables":[],"Path::contents/assets/css/default.css::Conditions":[],"Path::contents/assets/css/default.css::TopicConditions":[],"Path::contents/assets/css/default.css::IndexKeywords":[],"Path::contents/assets/css/default.css::Glossary":[],"Path::contents/assets/css/default.css::Bookmarks":[],"Path::contents/assets/css/default.css::MicrocontentResponse":[],"Path::contents/assets/css/default.css::size":1976,"Path::contents/Data_type.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Data_type.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"}],"Path::contents/Data_type.htm::Variables":["name_of_book","Copyright"],"Path::contents/Data_type.htm::Conditions":[],"Path::contents/Data_type.htm::TopicConditions":[],"Path::contents/Data_type.htm::IndexKeywords":[],"Path::contents/Data_type.htm::Glossary":[],"Path::contents/Data_type.htm::Bookmarks":[],"Path::contents/Data_type.htm::MicrocontentResponse":[],"Path::contents/Data_type.htm::Title":"Типы данных","Path::contents/Data_type.htm::Status":"Draft","Path::contents/Data_type.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Типы данных\n        \n      \n    \n  \n  \n       С++ язык со строгой типизацией. Каждый объект обязан иметь определенный тип. И этот тип определяет, какие значения может принимать объект, какие операции с ним можно производить и сколько байт в памяти он будет занимать.  Вы можете удивиться, но размер переменной с любым типом данных зависит от компилятора и/или архитектуры компьютера. Язык C++ гарантирует только их минимальный размер.\n      В языке C++ определены следующие базовые типы данных:\n  \n    \n      \n      \n      \n      \n    \n    \n      \n        Тип\n        Минимальный размер\n        Диапазон значений\n        Описание\n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n      \n        void\n        не имеет размера\n        нет\n        Представляет неопределенный тип. Чаще всего используется для функций которые не должны возвращать никакого значения.\n      \n      \n        bool\n        1 байт\n        (0 или false) и (1 или true)\n        Логический тип. Может принимать одну из двух значений true (истина) и false (ложь)\n      \n      \n        short\n        2 байта\n         \n        Представляет целое число. \n      \n      \n        int\n        2 байта\n        от −2 147 483 648 до 2 147 483 647\n        Представляет целое число.  \n      \n      \n        long\n        4 байта\n         \n        Представляет целое число. \n      \n      \n        long long\n        8 байт\n         \n        Представляет целое число. \n      \n      \n        float\n        4 байта\n         \n        Представляет вещественное число с плавающей точкой\n      \n      \n        double\n        8 байт\n         \n        Представляет вещественное число с плавающей точкой\n      \n      \n        long double\n        8 байт\n         \n        Представляет вещественное число с плавающей точкой\n      \n      \n        char\n        1 байт\n         \n        Представляет код символа в таблице ASCII\n      \n      \n        char16_t\n        2 байта\n         \n         \n      \n      \n        char32_t\n        4 байта\n         \n         \n      \n      \n        wchar_t\n        1 байт\n         \n         \n      \n    \n  \n   \n  Если хотите узнать размер в байтах для типов данных на вашем компьютере используйте оператор sizeof.\n  Следующая программа выводит список типов и их размеры в байтах\n     \n  \n    \n      \n    \n    \n      \n        \n          #include <iostream>\n           \n          int main()\n          {\n              std::cout << \"bool:\\t\\t\" << sizeof(bool) << \" bytes\" << std::endl;\n              std::cout << \"char:\\t\\t\" << sizeof(char) << \" bytes\" << std::endl;\n              std::cout << \"wchar_t:\\t\" << sizeof(wchar_t) << \" bytes\" << std::endl;\n              std::cout << \"char16_t:\\t\" << sizeof(char16_t) << \" bytes\" << std::endl;  \n              std::cout << \"char32_t:\\t\" << sizeof(char32_t) << \" bytes\" << std::endl;    \n              std::cout << \"short:\\t\\t\" << sizeof(short) << \" bytes\" << std::endl;\n              std::cout << \"int:\\t\\t\" << sizeof(int) << \" bytes\" << std::endl;\n              std::cout << \"long:\\t\\t\" << sizeof(long) << \" bytes\" << std::endl;\n              std::cout << \"long long:\\t\" << sizeof(long long) << \" bytes\" << std::endl;\n              std::cout << \"float:\\t\\t\" << sizeof(float) << \" bytes\" << std::endl;\n              std::cout << \"double:\\t\\t\" << sizeof(double) << \" bytes\" << std::endl;\n              std::cout << \"long double:\\t\" << sizeof(long double) << \" bytes\" << std::endl;\n              return 0;\n          }\n      \n    \n  \n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Data_type.htm::size":9168,"Path::contents/assets/css/book.css::Links":[],"Path::contents/assets/css/book.css::Variables":[],"Path::contents/assets/css/book.css::Conditions":[],"Path::contents/assets/css/book.css::TopicConditions":[],"Path::contents/assets/css/book.css::IndexKeywords":[],"Path::contents/assets/css/book.css::Glossary":[],"Path::contents/assets/css/book.css::Bookmarks":[],"Path::contents/assets/css/book.css::MicrocontentResponse":[],"Path::contents/assets/css/book.css::size":1028,"Path::index/Default.idx::Links":[],"Path::index/Default.idx::Variables":[],"Path::index/Default.idx::Conditions":[],"Path::index/Default.idx::TopicConditions":[],"Path::index/Default.idx::IndexKeywords":[],"Path::index/Default.idx::Glossary":[],"Path::index/Default.idx::Bookmarks":[],"Path::index/Default.idx::MicrocontentResponse":[],"Path::index/Default.idx::size":79,"Path::publish/presets/eBook.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/eBook.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../glossary/Default.glo","attr":"innerText","topic":"publish/presets/eBook.preset","nodeName":"path","external":false,"relPath":"glossary/Default.glo"}],"Path::publish/presets/eBook.preset::Variables":[],"Path::publish/presets/eBook.preset::Conditions":[],"Path::publish/presets/eBook.preset::TopicConditions":[],"Path::publish/presets/eBook.preset::IndexKeywords":[],"Path::publish/presets/eBook.preset::Glossary":[],"Path::publish/presets/eBook.preset::Bookmarks":[],"Path::publish/presets/eBook.preset::MicrocontentResponse":[],"Path::publish/presets/eBook.preset::size":1323,"Path::contents/Операторы/Сomparison_Operators.htm::Links":[{"origLink":"../assets/css/default.css","attr":"href","topic":"contents/Операторы/Сomparison_Operators.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"../assets/masterpages/book.htt","attr":"content","topic":"contents/Операторы/Сomparison_Operators.htm","nodeName":"meta","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::contents/Операторы/Сomparison_Operators.htm::Variables":["name_of_book","Copyright"],"Path::contents/Операторы/Сomparison_Operators.htm::Conditions":[],"Path::contents/Операторы/Сomparison_Operators.htm::TopicConditions":[],"Path::contents/Операторы/Сomparison_Operators.htm::IndexKeywords":[],"Path::contents/Операторы/Сomparison_Operators.htm::Glossary":[],"Path::contents/Операторы/Сomparison_Operators.htm::Bookmarks":[],"Path::contents/Операторы/Сomparison_Operators.htm::MicrocontentResponse":[],"Path::contents/Операторы/Сomparison_Operators.htm::Author":"DAYWER.RU","Path::contents/Операторы/Сomparison_Operators.htm::Title":"Операторы сравнения","Path::contents/Операторы/Сomparison_Operators.htm::Status":"Draft","Path::contents/Операторы/Сomparison_Operators.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Операторы сравнения\n        \n      \n    \n  \n  \n  \n    \n      \n      \n      \n      \n      \n    \n    \n      \n        Операция (выражение)\n        Оператор\n        Синтаксис выражения\n        Перегружаемый\n      \n      \n        Равенство\n        ==\n        a == b\n        Да\n      \n      \n        Неравенство\n        !=\n        a != b\n        Да\n      \n      \n        Больше\n        >\n        a > b\n        Да\n      \n      \n        Меньше\n        <\n        a < b\n        Да\n      \n      \n        Больше или равно\n        >=\n        a >= b\n        Да\n      \n      \n        Меньше или равно\n        <=\n        a =< b\n        Да\n      \n    \n  \n   \n  Равенство\n       int a = 4, b=5;    // переменной \"а\" присваивается значение 4, переменной \"b\" значение 5 \n       if (a == b) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"FALSE\". Так как сравнение двух чисел 4 и 5 вернуло результат ЛОЖЬ. Поскольку утверждение что 4 равно 5 ложно.\n   \n  Неравенство\n       int a = 4, b=5;    // переменной \"а\" присваивается значение 4, переменной \"b\" значение 5\n       if (a != b) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"TRUE\". Так как сравнение двух чисел 4 и 5 вернуло результат ИСТИНА. Поскольку утверждение что 4 не равно 5 истинно.\n   \n  Больше\n       int a = 4, b=5;    // переменной \"а\" присваивается значение 4, переменной \"b\" значение 5\n       if (a > b) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"FALSE\". Так как сравнение двух чисел 4 и 5 вернуло результат ЛОЖЬ. Поскольку утверждение что 4 больше 5 ложно.\n   \n  Меньше\n       int a = 4, b=5;    // переменной \"а\" присваивается значение 4, переменной \"b\" значение 5\n       if (a < b) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"TRUE\". Так как сравнение двух чисел 4 и 5 вернуло результат ИСТИНА. Поскольку утверждение что 4 меньше 5 истинно.\n   \n  Больше или Равно\n       int a = 33;  // переменной \"а\" присваивается значение 33\n       if (a >= 10) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"TRUE\". Так как выражение истинно когда значение переменной \"а\" равно 10 или больше него. \n   \n  Меньше или Равно\n       int a = 33;  // переменной \"а\" присваивается значение 33\n       if (a <= 10) std::cout \"TRUE\"; \n                  else \n                        std::cout \"FALSE\";\n  результатом будет вывод на консоль \"FALSE\". Так как выражение вернет результат ИСТИНА когда значение переменной \"а\" либо равно 10, либо  меньше него. Во всех остальных случаях выражение вернет результат ЛОЖЬ.\n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Операторы/Сomparison_Operators.htm::size":8901,"Path::publish/presets/Frameless.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/Frameless.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../glossary/Default.glo","attr":"innerText","topic":"publish/presets/Frameless.preset","nodeName":"path","external":false,"relPath":"glossary/Default.glo"},{"origLink":"../../contents/First_Topic.htm","attr":"innerText","topic":"publish/presets/Frameless.preset","nodeName":"path","external":false,"relPath":"contents/First_Topic.htm"}],"Path::publish/presets/Frameless.preset::Variables":[],"Path::publish/presets/Frameless.preset::Conditions":[],"Path::publish/presets/Frameless.preset::TopicConditions":[],"Path::publish/presets/Frameless.preset::IndexKeywords":[],"Path::publish/presets/Frameless.preset::Glossary":[],"Path::publish/presets/Frameless.preset::Bookmarks":[],"Path::publish/presets/Frameless.preset::MicrocontentResponse":[],"Path::publish/presets/Frameless.preset::size":2233,"Path::publish/presets/CHM.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/CHM.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../glossary/Default.glo","attr":"innerText","topic":"publish/presets/CHM.preset","nodeName":"path","external":false,"relPath":"glossary/Default.glo"},{"origLink":"../../contents/assets/masterpages/book.htt","attr":"innerText","topic":"publish/presets/CHM.preset","nodeName":"path","external":false,"relPath":"contents/assets/masterpages/book.htt"},{"origLink":"../../contents/Variables.htm","attr":"innerText","topic":"publish/presets/CHM.preset","nodeName":"path","external":false,"relPath":"contents/Variables.htm"}],"Path::publish/presets/CHM.preset::Variables":[],"Path::publish/presets/CHM.preset::Conditions":[],"Path::publish/presets/CHM.preset::TopicConditions":[],"Path::publish/presets/CHM.preset::IndexKeywords":[],"Path::publish/presets/CHM.preset::Glossary":[],"Path::publish/presets/CHM.preset::Bookmarks":[],"Path::publish/presets/CHM.preset::MicrocontentResponse":[],"Path::publish/presets/CHM.preset::size":1287,"Path::contents/Операторы/Arithmetic_operators.htm::Links":[{"origLink":"../assets/css/default.css","attr":"href","topic":"contents/Операторы/Arithmetic_operators.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"../assets/masterpages/book.htt","attr":"content","topic":"contents/Операторы/Arithmetic_operators.htm","nodeName":"meta","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::contents/Операторы/Arithmetic_operators.htm::Variables":["name_of_book","Copyright"],"Path::contents/Операторы/Arithmetic_operators.htm::Conditions":[],"Path::contents/Операторы/Arithmetic_operators.htm::TopicConditions":[],"Path::contents/Операторы/Arithmetic_operators.htm::IndexKeywords":[],"Path::contents/Операторы/Arithmetic_operators.htm::Glossary":[],"Path::contents/Операторы/Arithmetic_operators.htm::Bookmarks":[],"Path::contents/Операторы/Arithmetic_operators.htm::MicrocontentResponse":[],"Path::contents/Операторы/Arithmetic_operators.htm::Author":"DAYWER.RU","Path::contents/Операторы/Arithmetic_operators.htm::Title":"Арифметические операторы","Path::contents/Операторы/Arithmetic_operators.htm::Status":"Draft","Path::contents/Операторы/Arithmetic_operators.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Арифметические операторы\n        \n      \n    \n  \n  \n  \n    \n      \n      \n      \n      \n      \n    \n    \n      \n        Операция (выражение)\n        Оператор\n        Синтаксис выражения\n        Перегружаемый\n      \n      \n        Присваивание\n        =\n        a = b\n        Да\n      \n      \n        Сложение\n        +\n        a + b\n        Да\n      \n      \n        Вычитание\n        -\n        a - b\n        Да\n      \n      \n        Унарный плюс\n        +\n        +a\n        Да\n      \n      \n        Унарный минус\n        -\n        -b\n        Да\n      \n      \n        Умножение\n        *\n        a * b\n        Да\n      \n      \n        Деление\n        /\n        a / b\n        Да\n      \n      \n        Операция модуль (остаток от деления целых чисел)\n        %\n        a % b\n        Да\n      \n      \n        Инкремент\n        префиксный\n        ++\n        ++a\n        Да\n      \n      \n        \n          суфиксный\n          (постфиксный)\n        \n        ++\n        a++\n        Да\n      \n      \n        \n          Декремент\n        \n        префиксный\n        --\n        --a\n        Да\n      \n      \n        \n          суфиксный\n          (постфиксный)\n        \n        --\n        a--\n        Да\n      \n    \n  \n   \n  Присваивание\n       int a = 4;    // переменной \"а\" присваивается значение 4\n       std::cout << a; \n  результатом будет вывод на консоль числа 4\n   \n  Сложение\n       int a = 4, b = 5;    // переменной \"а\"  присваивается значение 4, переменной \"b\" значение 5\n       std::cout << a + b; \n  результатом будет вывод на консоль суммы чисел 4 и 5, то есть 9.\n   \n  \n    Вычитание\n  \n       int a = 4, b = 5;    // переменной \"а\" присваивается значение 4, переменной \"b\" значение 5\n       std::cout << b-a;  // операция вычитания 5-4\n  результатом будет вывод на консоль разности чисел 5 и 4, то есть 1.\n   \n  \n    Унарный плюс\n  \n       int a = +5   // переменной \"а\" присваивается значение 5\n       std::cout << a;  \n  результатом будет вывод на консоль числа 5. Как и в математике унарный плюс опускается. Число без знака и так является положительным\n   \n  \n    Унарный минус\n  \n       int a = -5   // переменной \"а\"присваивается значение минус 5\n       std::cout << a;  \n  результатом будет вывод на консоль числа -5. Унарный минус делает число отрицательным.\n   \n  \n    Умножение\n  \n       int a = 3, b = 2;   // переменной \"а\" присваивается значение 3, переменной \"b\" значение 2\n       std::cout << a * b;  \n  результатом будет вывод на консоль произведения чисел 3 и 2, то есть 6.\n   \n  \n    Деление \n  \n  \n    Для вещественных чисел (данных типа float, double, long double .......)\n  \n       float a = 3, b = 2;   // переменной \"а\" присваивается значение 3, переменной \"b\" значение 2\n       std::cout << a / b;  \n  результатом будет вывод на консоль частного чисел 3 и 2, то есть 1,5.\n  \n    Для целый чисел (данных типа int, long int, long long .......)\n  \n       int a =3 , b = 2;   // переменной \"а\" присваивается значение 3, переменной \"b\" значение 2\n       std::cout << a / b;  \n  результатом будет вывод на консоль частного чисел 3 и 2 без остатка, то есть 1. Так как переменные целого типа данных не могут хранить числа после запятой.\n   \n  Операция модуль (Остаток от деления целых чисел)\n       int a = 9, b = 7;   // переменной \"а \"присваивается значение 9, переменной \"b\" значение 7\n       std::cout << a / b;  \n  результатом будет вывод на консоль остатка деления, то есть 2.\n  ВНИМАНИЕ! Данная операция не приминима к вещественным числам.\n   \n  Инкремент (операция увеличение любого числа на единицу)\n  \n    Префиксный инкремент\n  \n       int a = 9;     // переменной \"а\" присваивается значение 9\n       std::cout << ++a;  \n  Так как инкремент префиксный то сначала будет значение переменной \"a\" увеличено на единицу.\n  Затем на консоль будет выведено число 10\n   \n  \n    Суффиксный или постфиксный инкремент\n  \n       int a = 9;     // переменной а присваивается значение 9\n       std::cout << a++ <<endl;   // выведет на консоль 9 и увеличится на единицу\n       std::cout << a;                    // выведет число 10.\n  Так как инкремент пофстфиксный, то сначала на консоль будет выведено число 9.  Затем значение переменной \"а\"  будет увеличено на единицу.\n  При повторном выводе будет выведено число 10.\n  ВНИМАНИЕ! Если операция инкремента применяется к вещественному числу, то увеличиваться будет только целая часть.\n   \n  Декремент (операция уменьшения любого числа на единицу)\n  \n    Префиксный декремент\n  \n       int a = 9;     // переменной \"а\" присваивается значение 9\n       std::cout << --a;  \n  Так как декремент префиксный то сначала значение переменной \"a\" будет уменьшено на единицу.\n  Затем на консоль будет выведено число 8\n   \n  \n    Суффиксный или постфиксный декремент\n  \n       int a = 9;     // переменной \"а\" присваивается значение 9\n       std::cout << a-- <<endl;   // выведет на консоль 9 и уменьшится на единицу\n       std::cout << a;                    // выведет число 8.\n  Так как декремент пофстфиксный то сначала на консоль будет выведено число 9. Затем значение переменной \"а\"  будет уменьшено на единицу.\n  При повторном выводе будет выведено число 8.\n  ВНИМАНИЕ! Если операция декремента применяется к вещественному числу, то уменьшатся будет только целая часть.\n   \n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Операторы/Arithmetic_operators.htm::size":15302,"Path::contents/Операторы/Operator_Switch.htm::Links":[{"origLink":"../assets/css/default.css","attr":"href","topic":"contents/Операторы/Operator_Switch.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"../assets/masterpages/book.htt","attr":"content","topic":"contents/Операторы/Operator_Switch.htm","nodeName":"meta","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::contents/Операторы/Operator_Switch.htm::Variables":["name_of_book","Copyright"],"Path::contents/Операторы/Operator_Switch.htm::Conditions":[],"Path::contents/Операторы/Operator_Switch.htm::TopicConditions":[],"Path::contents/Операторы/Operator_Switch.htm::IndexKeywords":[],"Path::contents/Операторы/Operator_Switch.htm::Glossary":[],"Path::contents/Операторы/Operator_Switch.htm::Bookmarks":[],"Path::contents/Операторы/Operator_Switch.htm::MicrocontentResponse":[],"Path::contents/Операторы/Operator_Switch.htm::Author":"DAYWER.RU","Path::contents/Операторы/Operator_Switch.htm::Title":"Оператор Switch","Path::contents/Операторы/Operator_Switch.htm::Status":"Draft","Path::contents/Операторы/Operator_Switch.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Оператор переключения Switch\n        \n      \n    \n  \n  \n  Выполняет участок кода при котором значение переменной-аргумента равно метке.\n   \n  switch ( x )        // где \"x\" переменная целого типа\n  {\n      case  1:         //  если х == 1 выполняется одна или несколько строк кода\n      case  2:         //  если х == 2 выполняется одна или несколько строк кода\n      case  3:         //  если х == 3 выполняется одна или несколько строк кода\n      case  4:         //  если х == 4 выполняется одна или несколько строк кода\n      default:         //  если x не равно ни одному из выше перечисленного\n  \n  }\n   \n  оператор Switch работает не только с базовым типом данных. Ниже представлен пример для переменной строкового типа, которые реализован класcом String\n  switch ( string )        // где \"string\" переменная строкового типа\n  {\n      case  \"one\":         //  если string == \"one\" выполняется одна или несколько строк кода\n      case  \"two\":         //  если string == \"two\" выполняется одна или несколько строк кода\n      case  \"three\":       //  если string == \"three\" выполняется одна или несколько строк кода\n      default:                 //  если string не равно ни одному из выше перечисленного\n  \n  }\n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n\n","Path::contents/Операторы/Operator_Switch.htm::size":4122,"Path::contents/Reference_materials/ASCII_table.htm::Links":[{"origLink":"../assets/css/default.css","attr":"href","topic":"contents/Reference_materials/ASCII_table.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"https://ru.wikipedia.org/wiki/QWERTY","attr":"href","topic":"contents/Reference_materials/ASCII_table.htm","nodeName":"a","external":true,"relPath":"https://ru.wikipedia.org/wiki/QWERTY"}],"Path::contents/Reference_materials/ASCII_table.htm::Variables":["name_of_book","Copyright"],"Path::contents/Reference_materials/ASCII_table.htm::Conditions":[],"Path::contents/Reference_materials/ASCII_table.htm::TopicConditions":[],"Path::contents/Reference_materials/ASCII_table.htm::IndexKeywords":[],"Path::contents/Reference_materials/ASCII_table.htm::Glossary":[],"Path::contents/Reference_materials/ASCII_table.htm::Bookmarks":[],"Path::contents/Reference_materials/ASCII_table.htm::MicrocontentResponse":[],"Path::contents/Reference_materials/ASCII_table.htm::Title":"Таблица ASCII","Path::contents/Reference_materials/ASCII_table.htm::Status":"Draft","Path::contents/Reference_materials/ASCII_table.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Таблица ASCII\n        \n      \n    \n  \n  \n       \n  Коды ASCII используются в программировании как промежуточные кроссплатформенные коды нажатых клавиш. Для раскладки клавиатуры QWERTY — таблица кодов выглядит так, как показано в следующей таблице.\n   \n  \n    \n      \n        \n          Escape\n          27\n        \n        \n           \n        \n        \n          F1\n          112\n        \n        \n          F2\n          113\n        \n        \n          F3\n          114\n        \n         \n        \n          F4\n          115\n        \n        \n          F5\n          116\n        \n        \n          F6\n          117\n        \n        \n          F7\n          118\n        \n        \n          F8\n          119\n        \n        \n          F9\n          120\n        \n        \n          F10\n          121\n        \n        \n          F11\n          122\n        \n        \n          F12\n          123\n        \n        \n          Print Screen\n        \n        \n          Scroll Lock\n          145\n        \n        \n          Pause\n          19\n        \n        \n           \n        \n      \n      \n        \n          `\n          192\n        \n        \n          1\n          49\n        \n        \n          2\n          50\n        \n        \n          3\n          51\n        \n        \n          4\n          52\n        \n        \n          5\n          53\n        \n        \n          6\n          54\n        \n        \n          7\n          55\n        \n        \n          8\n          56\n        \n        \n          9\n          57\n        \n        \n          0\n          48\n        \n        \n          -\n          189\n        \n        \n          =+\n          187\n        \n        \n          Back Space\n          8\n        \n        \n          Insert\n          45\n        \n        \n          Home\n          36\n        \n        \n          Page Up\n          33\n        \n        \n          Num Lock\n          144\n        \n        \n          / доп.\n          111\n        \n        \n          * доп.\n          106\n        \n        \n           \n          + доп.\n          107\n        \n      \n      \n        \n          Tab\n          9\n        \n        \n          Q\n          81\n        \n        \n          W\n          87\n        \n        \n          E\n          69\n        \n        \n          R\n          82\n        \n        \n          T\n          84\n        \n        \n          Y\n          89\n        \n        \n          U\n          85\n        \n        \n          I\n          73\n        \n        \n          O\n          79\n        \n        \n          P\n          80\n        \n        \n          [\n          219\n        \n        \n          ]\n          221\n        \n        \n           \n        \n        \n          Delete\n          46\n        \n        \n          End\n          35\n        \n        \n          Page Down\n          34\n        \n        \n          7 доп.\n          103\n        \n        \n          8 доп.\n          104\n        \n        \n          9 доп.\n          105\n        \n      \n      \n        \n          Caps Lock\n          20\n        \n        \n          A\n          65\n        \n        \n          S\n          83\n        \n        \n          D\n          68\n        \n        \n          F\n          70\n        \n        \n          G\n          71\n        \n        \n          H\n          72\n        \n        \n          J\n          74\n        \n        \n          K\n          75\n        \n        \n          L\n          76\n        \n        \n          ;\n          186\n        \n        \n          '\n          222\n        \n        \n          Enter\n          13\n        \n        \n           \n        \n        \n           \n        \n        \n           \n        \n        \n          4 доп.\n          100\n        \n        \n          5 доп.\n          101\n        \n        \n          6 доп.\n          102\n        \n        \n           \n           \n          Enter доп.\n           \n          13\n        \n      \n      \n        \n          Shift\n          16\n        \n        \n          Z\n          90\n        \n        \n          X\n          88\n        \n        \n          C\n          67\n        \n        \n          V\n          86\n        \n        \n          B\n          66\n        \n        \n          N\n          78\n        \n        \n          M\n          77\n        \n        \n          ,<\n          188\n        \n        \n          .>\n          190\n        \n        \n          /\n          191\n        \n        \n          Shift\n          16\n        \n        \n          \\|\n          220\n        \n        \n           \n        \n        \n           \n        \n        \n          Up\n          38\n        \n        \n           \n        \n        \n          1 доп.\n          97\n        \n        \n          2 доп.\n          98\n        \n        \n          3 доп.\n          99\n        \n      \n      \n        \n          Ctrl\n          17\n        \n        \n          super\n           \n        \n        \n          Alt\n          18\n        \n        \n          Space Bar\n          32\n        \n        \n          Alt\n          18\n        \n        \n          super\n        \n        \n          list\n        \n        \n          Ctrl\n          17\n        \n        \n           \n        \n        \n          Left\n          37\n        \n        \n          Down\n          40\n        \n        \n          Right\n          39\n        \n        \n          Ins/0 доп.\n          45/96\n        \n        \n          Del/. доп.\n          46/110\n        \n      \n    \n  \n   \n   \n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n  \n\n","Path::contents/Reference_materials/ASCII_table.htm::size":14822,"Path::publish/presets/Microcontent.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/Microcontent.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../glossary/Default.glo","attr":"innerText","topic":"publish/presets/Microcontent.preset","nodeName":"path","external":false,"relPath":"glossary/Default.glo"},{"origLink":"../../contents/First_Topic.htm","attr":"innerText","topic":"publish/presets/Microcontent.preset","nodeName":"path","external":false,"relPath":"contents/First_Topic.htm"}],"Path::publish/presets/Microcontent.preset::Variables":[],"Path::publish/presets/Microcontent.preset::Conditions":[],"Path::publish/presets/Microcontent.preset::TopicConditions":[],"Path::publish/presets/Microcontent.preset::IndexKeywords":[],"Path::publish/presets/Microcontent.preset::Glossary":[],"Path::publish/presets/Microcontent.preset::Bookmarks":[],"Path::publish/presets/Microcontent.preset::MicrocontentResponse":[],"Path::publish/presets/Microcontent.preset::size":1556,"Path::publish/presets/Knowledge Base.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/Knowledge Base.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../glossary/Default.glo","attr":"innerText","topic":"publish/presets/Knowledge Base.preset","nodeName":"path","external":false,"relPath":"glossary/Default.glo"}],"Path::publish/presets/Knowledge Base.preset::Variables":[],"Path::publish/presets/Knowledge Base.preset::Conditions":[],"Path::publish/presets/Knowledge Base.preset::TopicConditions":[],"Path::publish/presets/Knowledge Base.preset::IndexKeywords":[],"Path::publish/presets/Knowledge Base.preset::Glossary":[],"Path::publish/presets/Knowledge Base.preset::Bookmarks":[],"Path::publish/presets/Knowledge Base.preset::MicrocontentResponse":[],"Path::publish/presets/Knowledge Base.preset::size":3376,"Path::publish/presets/Word Document.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/Word Document.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../contents/assets/masterpages/book.htt","attr":"innerText","topic":"publish/presets/Word Document.preset","nodeName":"path","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::publish/presets/Word Document.preset::Variables":[],"Path::publish/presets/Word Document.preset::Conditions":[],"Path::publish/presets/Word Document.preset::TopicConditions":[],"Path::publish/presets/Word Document.preset::IndexKeywords":[],"Path::publish/presets/Word Document.preset::Glossary":[],"Path::publish/presets/Word Document.preset::Bookmarks":[],"Path::publish/presets/Word Document.preset::MicrocontentResponse":[],"Path::publish/presets/Word Document.preset::size":1322,"Path::publish/presets/PDF.preset::Links":[{"origLink":"../../toc/Default.toc","attr":"innerText","topic":"publish/presets/PDF.preset","nodeName":"path","external":false,"relPath":"toc/Default.toc"},{"origLink":"../../contents/assets/masterpages/book.htt","attr":"innerText","topic":"publish/presets/PDF.preset","nodeName":"path","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::publish/presets/PDF.preset::Variables":[],"Path::publish/presets/PDF.preset::Conditions":[],"Path::publish/presets/PDF.preset::TopicConditions":[],"Path::publish/presets/PDF.preset::IndexKeywords":[],"Path::publish/presets/PDF.preset::Glossary":[],"Path::publish/presets/PDF.preset::Bookmarks":[],"Path::publish/presets/PDF.preset::MicrocontentResponse":[],"Path::publish/presets/PDF.preset::size":2470,"Path::toc/Default.toc::Links":[{"origLink":"../contents/Variables.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Variables.htm"},{"origLink":"../contents/Enumerators.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Enumerators.htm"},{"origLink":"../contents/Arrays.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Arrays.htm"},{"origLink":"../contents/Condition.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Condition.htm"},{"origLink":"../contents/Cycles.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Cycles.htm"},{"origLink":"../contents/Data_type.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Data_type.htm"},{"origLink":"../contents/Операторы/Arithmetic_operators.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Операторы/Arithmetic_operators.htm"},{"origLink":"../contents/Операторы/Сomparison_Operators.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Операторы/Сomparison_Operators.htm"},{"origLink":"../contents/Операторы/Operator_Switch.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Операторы/Operator_Switch.htm"},{"origLink":"../contents/Reference_materials/ASCII_table.htm","attr":"href","topic":"toc/Default.toc","nodeName":"page","external":false,"relPath":"contents/Reference_materials/ASCII_table.htm"}],"Path::toc/Default.toc::Variables":[],"Path::toc/Default.toc::Conditions":[],"Path::toc/Default.toc::TopicConditions":[],"Path::toc/Default.toc::IndexKeywords":[],"Path::toc/Default.toc::Glossary":[],"Path::toc/Default.toc::Bookmarks":[],"Path::toc/Default.toc::MicrocontentResponse":[],"Path::toc/Default.toc::size":1264,"Path::contents/Enumerators.htm::Links":[{"origLink":"assets/css/default.css","attr":"href","topic":"contents/Enumerators.htm","nodeName":"link","external":false,"relPath":"contents/assets/css/default.css"},{"origLink":"assets/masterpages/book.htt","attr":"content","topic":"contents/Enumerators.htm","nodeName":"meta","external":false,"relPath":"contents/assets/masterpages/book.htt"}],"Path::contents/Enumerators.htm::Variables":["name_of_book","Copyright"],"Path::contents/Enumerators.htm::Conditions":[],"Path::contents/Enumerators.htm::TopicConditions":[],"Path::contents/Enumerators.htm::IndexKeywords":[],"Path::contents/Enumerators.htm::Glossary":[],"Path::contents/Enumerators.htm::Bookmarks":[],"Path::contents/Enumerators.htm::Title":"Перечисления","Path::contents/Enumerators.htm::Status":"Draft","Path::contents/Enumerators.htm::InnerText":"\n  \n    \n      \n    \n    \n      \n        \n          C++ Шпаргалка\n          Перечисления\n        \n      \n    \n  \n  \n  Перечисление — это пользовательский тип, состоящий из набора целочисленных констант, называемых перечислителями.\n   \n  Представьте что у вас есть переменная, которая может принимать только предопределенные значения.\n  enum Colors\n  {\n  RED,\n  GREEN,\n  BLUE\n  };\n  В данном примере создан новый тип данных с именем Colors.  Теперь объекты типа Colors смогут принимать значения RED, GREEN или BLUE.\n  Пример, объявим переменную с именем MyColor и типом Colors, и сразу присвоим ей предопределенное значение:\n  Colors MyColor = GREEN;   // Так правильно.\n  Colors MyColor = BLACK;    // А эта строка вызовет ошибку компиляции, так как BLACK не существует в перечислении\n   \n  Создадим перечислитель и объект и выведем значение через cout:\n  enum Colors\n  {\n  RED,\n  GREEN,\n  BLUE\n  } MyColor = RED;\n  ОБРАТИТЕ ВНИМАНИЕ! Мы создали перечисление Colors и тут же создали объект MyColor типа Colors и присвоили ему значение RED. И все это одной записью.\n  При выполнении следующей строки будет выведен ноль.\n   cout << MyColor; \n   \n  Дело в том, что каждому перечислителю автоматически присваивается целочисленное значение в зависимости от его позиции в списке перечисления. По умолчанию, первому перечислителю присваивается целое число 0, а каждому следующему — на единицу больше, чем предыдущему:\n   \n  enum Colors\n  {\n   COLOR_YELLOW,    // присваивается 0\n   COLOR_WHITE,      // присваивается 1\n   COLOR_ORANGE,  // присваивается 2\n   COLOR_GREEN,     // присваивается 3 \n  };\n   \n  Можно и самому определять значения перечислителей. Они могут быть как положительными, так и отрицательными, или вообще иметь аналогичные другим перечислителям значения. Любые, не определенные вами перечислители, будут иметь значения на единицу больше, чем значения предыдущих перечислителей. Например:\n   \n  // Определяем новый перечисляемый тип Cars\n  enum Cars\n  {\n      CAR_CHEVROLET= -4,\n      CAR_AROMEO, // присваивается -3\n      CAR_TOYOTA, // присваивается -2\n      CAR_JEEP = 6,\n      CAR_NIVA = 6, // имеет то же значение, что и CAR_JEEP\n      CAR_LADA       // присваивается 7\n  };\n   \n   \n   \n  \n  Copyright © 2021 DAYWER.RU. All Rights Reserved. \n  \n\n","Path::contents/Enumerators.htm::size":7248,"Path::contents/Enumerators.htm::MicrocontentResponse":[],"Path::C++.rhpj::mtimeMs":1644819596790,"Path::contents/Arrays.htm::mtimeMs":1644826938306,"Path::contents/Condition.htm::mtimeMs":1644818582977,"Path::contents/assets/masterpages/book.htt::mtimeMs":1633592682573,"Path::contents/Variables.htm::mtimeMs":1644826801695,"Path::contents/Cycles.htm::mtimeMs":1644824254366,"Path::contents/assets/css/default.css::mtimeMs":1635167788749,"Path::contents/assets/css/book.css::mtimeMs":1633592682563,"Path::contents/Data_type.htm::mtimeMs":1633592682536,"Path::publish/presets/eBook.preset::mtimeMs":1633592682634,"Path::index/Default.idx::mtimeMs":1633592682585,"Path::contents/Операторы/Сomparison_Operators.htm::mtimeMs":1635172976269,"Path::publish/presets/CHM.preset::mtimeMs":1633592821981,"Path::publish/presets/Frameless.preset::mtimeMs":1633592682607,"Path::contents/Операторы/Arithmetic_operators.htm::mtimeMs":1635171295100,"Path::contents/Операторы/Operator_Switch.htm::mtimeMs":1633699758566,"Path::contents/Reference_materials/ASCII_table.htm::mtimeMs":1644817132481,"Path::publish/presets/Microcontent.preset::mtimeMs":1633592682617,"Path::publish/presets/Knowledge Base.preset::mtimeMs":1633592682612,"Path::publish/presets/Word Document.preset::mtimeMs":1633592682629,"Path::publish/presets/PDF.preset::mtimeMs":1633592682623,"Path::toc/Default.toc::mtimeMs":1644824920969,"Path::contents/Enumerators.htm::mtimeMs":1644827080744}