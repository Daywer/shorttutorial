<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Операторы Break / Continue</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../assets/css/default.css" />
  <meta name="rh-authors" content="DAYWER.RU" />
  <meta name="template" content="../assets/masterpages/book.htt" />
  <meta http-equiv="Content-Language" content="ru-RU" />
</head>
<body>
  <table border="0" cellpadding="1" cellspacing="1" style="border-collapse:collapse;width:100%;min-height:10px;background-color:#99CCFF">
    <colgroup>
      <col style="width:100%" />
    </colgroup>
    <tbody>
      <tr>
        <td>
          <p><span data-keyref="name_of_book">C++ Шпаргалка</span></p>
          <p style="text-align: left"><span style="font-size: 22px;"><b>Оператор Break / Continue</b></span></p>
        </td>
      </tr>
    </tbody>
  </table>
  <p><strong></strong></p>
  <p>Оператор Break - завершает выполнение циклов (FOR, WHILE, DO/WHILE) или работу оператора <span style="color:#0000ff;"><span style="font-weight:bold;">switch </span></span>в той точке где был установлен оператор <span style="color:#0000ff;font-weight:bold">break</span>. Этот оператор называют оператором прерывания и используют для остановки выполнения кода в нужном месте кода.</p>
  <p> </p>
  <h3>Пример с циклом <span style="font-weight:bold;"><span style="color:#0000ff;">FOR</span>:</span></h3>
  <p><span style="font-weight:bold;">for (int i = 0; i &lt;10; i++ )</span></p>
  <p><span style="font-weight:bold;">{</span></p>
  <p><span style="font-weight:bold;">   cout &lt;&lt; i &lt;&lt; endl;</span></p>
  <p><span style="font-weight:bold;">   if (i == 5) break; </span></p>
  <p><span style="font-weight:bold;">}</span></p>
  <p>Как только i станет равным пяти по условию, будет вызван оператор <span class="expandtext">break</span> и выполнение цикла будет прервано. Программа перейдет к строке следующей за циклом.</p>
  <p> </p>
  <h3><a id="SWITCH/BREAK"></a>Пример с оператором <span style="font-weight:bold;"><span style="color:#0000ff;">SWITCH:</span></span></h3>
  <p><span style="font-weight:bold;">switch ( x )</span>        // где &quot;x&quot; переменная целого типа</p>
  <p><span style="font-weight:bold;">{</span></p>
  <p><span style="font-weight:bold;">    case  1:</span>        std::cout &lt;&lt; 1 &lt;&lt; endl; </p>
  <p>                         break;</p>
  <p><span style="font-weight:bold;">    case  2:</span>        std::cout &lt;&lt; 2 &lt;&lt; endl; </p>
  <p>                         break;<span style="font-weight:bold;">   </span></p>
  <p><span style="font-weight:bold;">    case  3:</span>        std::cout &lt;&lt; 3 &lt;&lt; endl; </p>
  <p>                         break;</p>
  <p><span style="font-weight:bold;"></span></p>
  <p><span style="font-weight:bold;">    case  4:</span>        std::cout &lt;&lt; 4 &lt;&lt; endl; </p>
  <p>                         break;</p>
  <p><span style="font-weight:bold;">    default:</span>         //  если x не равно ни одному из выше перечисленного</p>
  <p>                         std::cout &lt;&lt; &quot;Нет совпадений&quot;;</p>
  <p><span style="font-weight:bold;"></span></p>
  <p><span style="font-weight:bold;">}</span></p>
  <p>Как показано выше оператор <span class="expandtext">break</span> стоит после каждого вхождения.  Сделано это для того чтобы прерывать работу оператора <span class="expandtext">switch </span>после необходимого совпадения. </p>
  <p>Разберем на примере. Допустим <span class="expandtext">x</span> равен 3. Тогда оператор <span class="Blue_Bold"><span class="expandtext">switch </span></span>пропустит <span class="expandtext">case 1</span> и <span class="expandtext">case 2</span>, но выполнит код под меткой <span class="expandtext">case 3</span>. Так как вхождение найдено, оператор <span class="expandtext">switch </span>больше не занимается поиском и выполняет все строчки кода ниже. То есть будет выполнены строки:</p>
  <p>std::cout &lt;&lt; 3 &lt;&lt; endl;  </p>
  <p>std::cout &lt;&lt; 4 &lt;&lt; endl; </p>
  <p>Это является особенностью работы оператора <span style="color:#0000ff;"><span style="font-weight:bold;">switch</span></span>, поэтому программист должен сам обеспечить прерывание работы при помощи оператора <span style="color:#0000ff;"><span style="font-weight:bold;">break</span></span>.</p>
  <p> </p>
  <p> </p>
  <h3>Оператор <span style="color:#0000ff;">CONTINUE</span></h3>
  <p>Оператор Continue - используется в циклах (FOR, WHILE, DO/WHILE) , когда требуется немедленно перейти к следущему шагу (итерации).</p>
  <p>Например:</p>
  <p><span style="font-weight:bold;"><span class="Blue_Bold">int </span>count = 0;</span></p>
  <p><span style="font-weight:bold;">do // начало цикла do while</span></p>
  <p><span style="font-weight:bold;">  {</span></p>
  <p><span style="font-weight:bold;">     continue; </span>  // пропускаем весь код ниже и переходим к следующему шагу цикла.</p>
  <p><span style="font-weight:bold;">     count++;</span></p>
  <p><span style="font-weight:bold;">  }</span></p>
  <p><span style="font-weight:bold;">while ( count  &lt;  10 )</span></p>
  <p>В данном примере переход к следующему шагу будет осуществлен до операции инкремента переменной <span class="Blue_Bold">count</span>.  count никогда не будет увеличиваться,</p>
  <p>и цикл будет выполняться бесконечно.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <hr />
  <p><strong></strong><span data-keyref="Copyright">Copyright © 2021 DAYWER.RU. All Rights Reserved. </span></p>
</body>
</html>