<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta name="generator" content="Adobe RoboHelp 2020"/>
  <title>Типы данных</title>
  <meta name="topic-status" content="Draft"/>
  <link rel="stylesheet" type="text/css" href="assets/css/default.css"/>
</head>
<body>
  <table border="0" cellpadding="1" cellspacing="1" style="border-collapse:collapse;width:100%;min-height:10px;background-color:#99CCFF">
    <colgroup>
      <col style="width:100%"/>
    </colgroup>
    <tbody>
      <tr>
        <td>
          <p><span data-keyref="name_of_book">C++ Шпаргалка</span></p>
          <p><span style="font-weight:bold;"><span style="font-size:1px;"><span style="text-align:center;font-size:22px">Типы данных</span></span></span></p>
        </td>
      </tr>
    </tbody>
  </table>
  <p><strong></strong></p>
  <p>     С++ язык со строгой типизацией. Каждый объект обязан иметь определенный тип. И этот тип определяет, какие значения может принимать объект, какие операции с ним можно производить и сколько байт в памяти он будет занимать.  Вы можете удивиться, но размер переменной с любым типом данных зависит от компилятора и/или архитектуры компьютера. Язык C++ гарантирует только их минимальный размер.</p>
  <p>    В языке C++ определены следующие базовые типы данных:</p>
  <table border="0" cellpadding="1" cellspacing="1" style="width: 100%;">
    <colgroup>
      <col style="width: 80px;"/>
      <col style="width: 80px;"/>
      <col style="width: 229px;"/>
      <col style="width: 622px;"/>
    </colgroup>
    <tbody>
      <tr>
        <td style="font-weight: bold; font-size: 16px;">Тип</td>
        <td style="font-weight: bold; font-size: 16px;">Минимальный размер</td>
        <td style="font-weight: bold; font-size: 16px;">Диапазон значений</td>
        <td style="font-weight: bold; font-size: 16px;">Описание</td>
      </tr>
      <tr>
        <td style="font-weight: bold; font-size: 16px;">
          <hr/>
        </td>
        <td style="font-weight: bold; font-size: 16px;">
          <hr/>
        </td>
        <td style="font-weight: bold; font-size: 16px;">
          <hr/>
        </td>
        <td style="font-weight: bold; font-size: 16px;">
          <hr/>
        </td>
      </tr>
      <tr>
        <td style="background-color: rgba(192, 192, 192, 0.40)"><span style="font-weight:bold;">void</span></td>
        <td style="background-color: rgba(192, 192, 192, 0.4);">не имеет размера</td>
        <td style="background-color: rgba(192, 192, 192, 0.4);">нет</td>
        <td style="background-color: rgba(192, 192, 192, 0.40)">Представляет неопределенный тип. Чаще всего используется для функций которые не должны возвращать никакого значения.</td>
      </tr>
      <tr>
        <td style=""><span style="font-weight:bold;">bool</span></td>
        <td style="">1 байт</td>
        <td style="">(0 или false) и (1 или true)</td>
        <td style=""><span>Логический тип. Может принимать одну из двух значений<span> </span></span>true<span><span> </span>(истина) и<span> </span></span>false<span><span> </span>(ложь)</span></td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td style=""><span style="font-weight:bold;">short</span></td>
        <td style="">2 байта</td>
        <td style=""> </td>
        <td style="">Представляет целое число. </td>
      </tr>
      <tr>
        <td style=""><span style="font-weight:bold;">int</span></td>
        <td style="">2 байта</td>
        <td style="">от −2 147 483 648 до 2 147 483 647</td>
        <td>Представляет целое число.  </td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td><span style="font-weight:bold;">long</span></td>
        <td style="">4 байта</td>
        <td style=""> </td>
        <td>Представляет целое число. </td>
      </tr>
      <tr>
        <td style="font-weight: bold">long long</td>
        <td style="">8 байт</td>
        <td style=""> </td>
        <td>Представляет целое число. </td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td style="font-weight: bold">float</td>
        <td style="">4 байта</td>
        <td style=""> </td>
        <td>Представляет вещественное число с плавающей точкой</td>
      </tr>
      <tr>
        <td style="font-weight: bold">double</td>
        <td style="">8 байт</td>
        <td style=""> </td>
        <td>Представляет вещественное число с плавающей точкой</td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td style="font-weight: bold">long double</td>
        <td style="">8 байт</td>
        <td style=""> </td>
        <td>Представляет вещественное число с плавающей точкой</td>
      </tr>
      <tr>
        <td style="font-weight: bold">char</td>
        <td style="">1 байт</td>
        <td style=""> </td>
        <td>Представляет код символа в таблице ASCII</td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td style="font-weight: bold">char16_t</td>
        <td style="">2 байта</td>
        <td style=""> </td>
        <td> </td>
      </tr>
      <tr>
        <td style="font-weight: bold">char32_t</td>
        <td style="">4 байта</td>
        <td style=""> </td>
        <td> </td>
      </tr>
      <tr style="background-color: rgba(192, 192, 192, 0.40)">
        <td style="font-weight: bold">wchar_t</td>
        <td style="">1 байт</td>
        <td style=""> </td>
        <td> </td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Если хотите узнать размер в байтах для типов данных на вашем компьютере используйте оператор <span style="font-weight:bold;">sizeof.</span></p>
  <p>Следующая программа выводит список типов и их размеры в байтах<br/>
     </p>
  <table border="0" cellpadding="1" cellspacing="1" style="border-collapse:collapse;width:100%;background-color:rgba(192, 192, 192, 0.20)">
    <colgroup>
      <col style="width:100%"/>
    </colgroup>
    <tbody>
      <tr>
        <td><br/>
          #include &lt;iostream&gt;<br/>
           <br/>
          int main()<br/>
          {<br/>
              std::cout &lt;&lt; &quot;bool:\t\t&quot; &lt;&lt; sizeof(bool) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;char:\t\t&quot; &lt;&lt; sizeof(char) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;wchar_t:\t&quot; &lt;&lt; sizeof(wchar_t) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;char16_t:\t&quot; &lt;&lt; sizeof(char16_t) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;  <br/>
              std::cout &lt;&lt; &quot;char32_t:\t&quot; &lt;&lt; sizeof(char32_t) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;    <br/>
              std::cout &lt;&lt; &quot;short:\t\t&quot; &lt;&lt; sizeof(short) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;int:\t\t&quot; &lt;&lt; sizeof(int) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;long:\t\t&quot; &lt;&lt; sizeof(long) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;long long:\t&quot; &lt;&lt; sizeof(long long) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;float:\t\t&quot; &lt;&lt; sizeof(float) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;double:\t\t&quot; &lt;&lt; sizeof(double) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              std::cout &lt;&lt; &quot;long double:\t&quot; &lt;&lt; sizeof(long double) &lt;&lt; &quot; bytes&quot; &lt;&lt; std::endl;<br/>
              return 0;<br/>
          }</td>
      </tr>
    </tbody>
  </table>
  <hr/>
  <p><strong></strong><span data-keyref="Copyright">Copyright © 2021 DAYWER.RU. All Rights Reserved. </span></p>

</body></html>